{"ast":null,"code":"var _jsxFileName = \"/Users/bartawil/Desktop/task-manager/frontend/src/components/TaskList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport TaskItem from './TaskItem';\nimport '../styles/TaskList.css'; // נוסיף קובץ סגנונות ייעודי\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TaskList({\n  tasks,\n  onUpdate,\n  onDelete,\n  onToggle\n}) {\n  _s();\n  const carouselRef = useRef(null);\n\n  // אפקט לגלילה אינסופית\n  useEffect(() => {\n    const carousel = carouselRef.current;\n    if (!carousel) return;\n    let scrollAmount = 0;\n    const scrollStep = 1; // כמה פיקסלים לזוז בכל צעד\n    const scrollInterval = 20; // כל כמה מילי־שניות לזוז\n\n    const interval = setInterval(() => {\n      if (carousel.scrollWidth === 0) return;\n      scrollAmount += scrollStep;\n      if (scrollAmount >= carousel.scrollWidth / 2) {\n        // חוזרים להתחלה (כי שכפלנו את הרשימה)\n        scrollAmount = 0;\n      }\n      carousel.scrollTo({\n        left: scrollAmount,\n        behavior: 'smooth'\n      });\n    }, scrollInterval);\n    return () => clearInterval(interval);\n  }, [tasks]);\n\n  // אם אין משימות\n  if (!tasks || tasks.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No tasks yet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 12\n    }, this);\n  }\n\n  // שכפול הרשימה פעמיים כדי ליצור אשליה של אינסוף\n  const duplicatedTasks = [...tasks, ...tasks];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"carousel\",\n    ref: carouselRef,\n    children: duplicatedTasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"carousel-item\",\n      children: /*#__PURE__*/_jsxDEV(TaskItem, {\n        task: task,\n        onUpdate: onUpdate,\n        onDelete: onDelete,\n        onToggle: onToggle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)\n    }, task.id + Math.random(), false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskList, \"tqI5RslTGVDAuq9aDlmVCnZoZD8=\");\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useEffect","useRef","TaskItem","jsxDEV","_jsxDEV","TaskList","tasks","onUpdate","onDelete","onToggle","_s","carouselRef","carousel","current","scrollAmount","scrollStep","scrollInterval","interval","setInterval","scrollWidth","scrollTo","left","behavior","clearInterval","length","children","fileName","_jsxFileName","lineNumber","columnNumber","duplicatedTasks","className","ref","map","task","id","Math","random","_c","$RefreshReg$"],"sources":["/Users/bartawil/Desktop/task-manager/frontend/src/components/TaskList.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport TaskItem from './TaskItem';\nimport '../styles/TaskList.css'; // נוסיף קובץ סגנונות ייעודי\n\nfunction TaskList({ tasks, onUpdate, onDelete, onToggle }) {\n  const carouselRef = useRef(null);\n\n  // אפקט לגלילה אינסופית\n  useEffect(() => {\n    const carousel = carouselRef.current;\n    if (!carousel) return;\n\n    let scrollAmount = 0;\n    const scrollStep = 1; // כמה פיקסלים לזוז בכל צעד\n    const scrollInterval = 20; // כל כמה מילי־שניות לזוז\n\n    const interval = setInterval(() => {\n      if (carousel.scrollWidth === 0) return;\n\n      scrollAmount += scrollStep;\n      if (scrollAmount >= carousel.scrollWidth / 2) {\n        // חוזרים להתחלה (כי שכפלנו את הרשימה)\n        scrollAmount = 0;\n      }\n      carousel.scrollTo({ left: scrollAmount, behavior: 'smooth' });\n    }, scrollInterval);\n\n    return () => clearInterval(interval);\n  }, [tasks]);\n\n  // אם אין משימות\n  if (!tasks || tasks.length === 0) {\n    return <p>No tasks yet</p>;\n  }\n\n  // שכפול הרשימה פעמיים כדי ליצור אשליה של אינסוף\n  const duplicatedTasks = [...tasks, ...tasks];\n\n  return (\n    <div className=\"carousel\" ref={carouselRef}>\n      {duplicatedTasks.map(task => (\n        <div className=\"carousel-item\" key={task.id + Math.random()}>\n          <TaskItem\n            task={task}\n            onUpdate={onUpdate}\n            onDelete={onDelete}\n            onToggle={onToggle}\n          />\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default TaskList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAO,wBAAwB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEjC,SAASC,QAAQA,CAAC;EAAEC,KAAK;EAAEC,QAAQ;EAAEC,QAAQ;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EACzD,MAAMC,WAAW,GAAGV,MAAM,CAAC,IAAI,CAAC;;EAEhC;EACAD,SAAS,CAAC,MAAM;IACd,MAAMY,QAAQ,GAAGD,WAAW,CAACE,OAAO;IACpC,IAAI,CAACD,QAAQ,EAAE;IAEf,IAAIE,YAAY,GAAG,CAAC;IACpB,MAAMC,UAAU,GAAG,CAAC,CAAC,CAAC;IACtB,MAAMC,cAAc,GAAG,EAAE,CAAC,CAAC;;IAE3B,MAAMC,QAAQ,GAAGC,WAAW,CAAC,MAAM;MACjC,IAAIN,QAAQ,CAACO,WAAW,KAAK,CAAC,EAAE;MAEhCL,YAAY,IAAIC,UAAU;MAC1B,IAAID,YAAY,IAAIF,QAAQ,CAACO,WAAW,GAAG,CAAC,EAAE;QAC5C;QACAL,YAAY,GAAG,CAAC;MAClB;MACAF,QAAQ,CAACQ,QAAQ,CAAC;QAAEC,IAAI,EAAEP,YAAY;QAAEQ,QAAQ,EAAE;MAAS,CAAC,CAAC;IAC/D,CAAC,EAAEN,cAAc,CAAC;IAElB,OAAO,MAAMO,aAAa,CAACN,QAAQ,CAAC;EACtC,CAAC,EAAE,CAACX,KAAK,CAAC,CAAC;;EAEX;EACA,IAAI,CAACA,KAAK,IAAIA,KAAK,CAACkB,MAAM,KAAK,CAAC,EAAE;IAChC,oBAAOpB,OAAA;MAAAqB,QAAA,EAAG;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAC5B;;EAEA;EACA,MAAMC,eAAe,GAAG,CAAC,GAAGxB,KAAK,EAAE,GAAGA,KAAK,CAAC;EAE5C,oBACEF,OAAA;IAAK2B,SAAS,EAAC,UAAU;IAACC,GAAG,EAAErB,WAAY;IAAAc,QAAA,EACxCK,eAAe,CAACG,GAAG,CAACC,IAAI,iBACvB9B,OAAA;MAAK2B,SAAS,EAAC,eAAe;MAAAN,QAAA,eAC5BrB,OAAA,CAACF,QAAQ;QACPgC,IAAI,EAAEA,IAAK;QACX3B,QAAQ,EAAEA,QAAS;QACnBC,QAAQ,EAAEA,QAAS;QACnBC,QAAQ,EAAEA;MAAS;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpB;IAAC,GANgCK,IAAI,CAACC,EAAE,GAAGC,IAAI,CAACC,MAAM,CAAC,CAAC;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAOtD,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACnB,EAAA,CAhDQL,QAAQ;AAAAiC,EAAA,GAARjC,QAAQ;AAkDjB,eAAeA,QAAQ;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}